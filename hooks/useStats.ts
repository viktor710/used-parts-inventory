import { useState, useEffect, useCallback } from 'react';
import { InventoryStats } from '@/types';

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
 */
export function useStats() {
  const [stats, setStats] = useState<InventoryStats | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const fetchStats = useCallback(async () => {
    try {
      console.log('üîß [DEBUG] useStats: –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      setLoading(true);
      setError(null);

      const response = await fetch('/api/stats');
      const result = await response.json();

      if (result.success) {
        console.log('üîß [DEBUG] useStats: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', result.data);
        setStats(result.data);
        setLastUpdated(new Date());
      } else {
        console.error('üîß [DEBUG] useStats: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', result.error);
        setError(result.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      }
    } catch (error) {
      console.error('üîß [DEBUG] useStats: –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
      setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    } finally {
      setLoading(false);
    }
  }, []);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchStats();
  }, [fetchStats]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  useEffect(() => {
    const interval = setInterval(() => {
      console.log('üîß [DEBUG] useStats: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      fetchStats();
    }, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç

    return () => clearInterval(interval);
  }, [fetchStats]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  const refresh = useCallback(() => {
    console.log('üîß [DEBUG] useStats: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    fetchStats();
  }, [fetchStats]);

  return {
    stats,
    loading,
    error,
    lastUpdated,
    refresh
  };
}

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 */
export function useResponsiveStats() {
  const { stats, loading, error, lastUpdated, refresh } = useStats();
  const [isMobile, setIsMobile] = useState(false);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –º–æ–±–∏–ª—å–Ω—ã–º
  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };

    checkMobile();
    window.addEventListener('resize', checkMobile);
    
    return () => window.removeEventListener('resize', checkMobile);
  }, []);

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
  useEffect(() => {
    const interval = setInterval(() => {
      // –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∂–µ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞
      if (!isMobile) {
        refresh();
      }
    }, isMobile ? 10 * 60 * 1000 : 5 * 60 * 1000); // 10 –º–∏–Ω—É—Ç –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö, 5 –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ

    return () => clearInterval(interval);
  }, [isMobile, refresh]);

  return {
    stats,
    loading,
    error,
    lastUpdated,
    refresh,
    isMobile
  };
}
