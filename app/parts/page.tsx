import React from 'react';
import { Header } from '@/components/layout/Header';
import { Sidebar } from '@/components/layout/Sidebar';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';
import { Button } from '@/components/ui/Button';
import { CategoryBadge, ConditionBadge, StatusBadge } from '@/components/ui/Badge';
import { DebugPanel } from '@/components/debug/DebugPanel';
import { 
  Plus, 
  Search, 
  Filter, 
  Grid, 
  List,
  Eye,
  Edit,
  Trash2,
  Download,
  Upload
} from 'lucide-react';
import { Part } from '@/types';

/**
 * –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
 */
const mockParts: Part[] = [
  {
    id: '1',
    name: '–î–≤–∏–≥–∞—Ç–µ–ª—å BMW M54',
    category: 'engine',
    brand: 'BMW',
    model: 'E46',
    year: 2003,
    condition: 'good',
    status: 'available',
    price: 85000,
    description: '–î–≤–∏–≥–∞—Ç–µ–ª—å BMW M54 2.5L –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏',
    location: '–°–∫–ª–∞–¥ –ê, –ø–æ–ª–∫–∞ 1',
    supplier: '–ê–≤—Ç–æ—Ä–∞–∑–±–æ—Ä–∫–∞ BMW',
    purchaseDate: new Date('2024-01-15'),
    purchasePrice: 65000,
    images: [],
    notes: '–ü—Ä–æ–≤–µ—Ä–µ–Ω, –≥–æ—Ç–æ–≤ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ',
    createdAt: new Date('2024-01-15'),
    updatedAt: new Date('2024-01-15'),
  },
  {
    id: '2',
    name: '–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á 5MT',
    category: 'transmission',
    brand: 'Toyota',
    model: 'Camry',
    year: 2010,
    condition: 'excellent',
    status: 'reserved',
    price: 45000,
    description: '–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –∫–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏',
    location: '–°–∫–ª–∞–¥ –ë, –ø–æ–ª–∫–∞ 3',
    supplier: 'Toyota Parts',
    purchaseDate: new Date('2024-01-10'),
    purchasePrice: 35000,
    images: [],
    notes: '–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞',
    createdAt: new Date('2024-01-10'),
    updatedAt: new Date('2024-01-12'),
  },
  {
    id: '3',
    name: '–¢–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏',
    category: 'brakes',
    brand: 'Brembo',
    model: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ',
    year: 2020,
    condition: 'excellent',
    status: 'sold',
    price: 8000,
    description: '–ü–µ—Ä–µ–¥–Ω–∏–µ —Ç–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏ Brembo',
    location: '–°–∫–ª–∞–¥ –ê, –ø–æ–ª–∫–∞ 5',
    supplier: 'Brembo Official',
    purchaseDate: new Date('2024-01-05'),
    purchasePrice: 6000,
    images: [],
    notes: '–ü—Ä–æ–¥–∞–Ω—ã 15.01.2024',
    createdAt: new Date('2024-01-05'),
    updatedAt: new Date('2024-01-15'),
  },
];

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–ø—á–∞—Å—Ç–∏
 */
const PartCard: React.FC<{ part: Part }> = ({ part }) => {
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log('üîß [DEBUG] PartCard: –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–ø—á–∞—Å—Ç–∏:', part.id, part.name);
  return (
    <Card className="card-hover">
      <CardContent className="p-6">
        <div className="flex items-start justify-between mb-4">
          <div className="flex-1">
            <h3 className="text-lg font-semibold text-neutral-900 mb-2">
              {part.name}
            </h3>
            <p className="text-sm text-neutral-600 mb-3">
              {part.brand} {part.model} ({part.year})
            </p>
            <div className="flex flex-wrap gap-2 mb-3">
              <CategoryBadge category={part.category} />
              <ConditionBadge condition={part.condition} />
              <StatusBadge status={part.status} />
            </div>
          </div>
          <div className="text-right">
            <p className="text-2xl font-bold text-primary">
              ‚ÇΩ{part.price.toLocaleString()}
            </p>
            <p className="text-sm text-neutral-500">
              –ú–µ—Å—Ç–æ: {part.location}
            </p>
          </div>
        </div>
        
        <p className="text-sm text-neutral-700 mb-4 line-clamp-2">
          {part.description}
        </p>
        
        <div className="flex items-center justify-between">
          <div className="text-sm text-neutral-500">
            –ü–æ—Å—Ç–∞–≤—â–∏–∫: {part.supplier}
          </div>
          <div className="flex space-x-2">
            <Button variant="ghost" size="sm">
              <Eye className="w-4 h-4" />
            </Button>
            <Button variant="ghost" size="sm">
              <Edit className="w-4 h-4" />
            </Button>
            <Button variant="ghost" size="sm" className="text-error hover:text-error">
              <Trash2 className="w-4 h-4" />
            </Button>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤
 */
const Filters: React.FC = () => {
  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center">
          <Filter className="w-5 h-5 mr-2" />
          –§–∏–ª—å—Ç—Ä—ã
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          {/* –ü–æ–∏—Å–∫ */}
          <div className="lg:col-span-2">
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –ü–æ–∏—Å–∫
            </label>
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-neutral-400" />
              <input
                type="text"
                placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ, –±—Ä–µ–Ω–¥, –º–æ–¥–µ–ª—å..."
                className="w-full pl-10 pr-4 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
              />
            </div>
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
          <div>
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –ö–∞—Ç–µ–≥–æ—Ä–∏—è
            </label>
            <select className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary">
              <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
              <option value="engine">–î–≤–∏–≥–∞—Ç–µ–ª—å</option>
              <option value="transmission">–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è</option>
              <option value="suspension">–ü–æ–¥–≤–µ—Å–∫–∞</option>
              <option value="brakes">–¢–æ—Ä–º–æ–∑–∞</option>
              <option value="electrical">–≠–ª–µ–∫—Ç—Ä–∏–∫–∞</option>
              <option value="body">–ö—É–∑–æ–≤</option>
              <option value="interior">–°–∞–ª–æ–Ω</option>
              <option value="exterior">–í–Ω–µ—à–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã</option>
              <option value="other">–ü—Ä–æ—á–µ–µ</option>
            </select>
          </div>

          {/* –°—Ç–∞—Ç—É—Å */}
          <div>
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –°—Ç–∞—Ç—É—Å
            </label>
            <select className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary">
              <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
              <option value="available">–î–æ—Å—Ç—É–ø–Ω–∞</option>
              <option value="reserved">–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∞</option>
              <option value="sold">–ü—Ä–æ–¥–∞–Ω–∞</option>
              <option value="scrapped">–£—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞</option>
            </select>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
          <div>
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –¶–µ–Ω–∞ –æ—Ç
            </label>
            <input
              type="number"
              placeholder="‚ÇΩ"
              className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –¶–µ–Ω–∞ –¥–æ
            </label>
            <input
              type="number"
              placeholder="‚ÇΩ"
              className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –ì–æ–¥
            </label>
            <input
              type="number"
              placeholder="–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞"
              className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
        <div className="flex justify-between items-center mt-6">
          <Button variant="outline">
            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </Button>
          <Button variant="primary">
            –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </Button>
        </div>
      </CardContent>
    </Card>
  );
};

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π
 */
export default function PartsPage() {
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log('üîß [DEBUG] PartsPage: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è');
  console.log('üîß [DEBUG] PartsPage: –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–ø—á–∞—Å—Ç–µ–π:', mockParts.length);
  return (
    <div className="min-h-screen bg-neutral-50">
      <Header />
      
      <div className="flex h-[calc(100vh-4rem)]">
        <Sidebar />
        
        <main className="flex-1 overflow-y-auto">
          <div className="container-custom py-8">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
            <div className="flex items-center justify-between mb-8">
              <div>
                <h1 className="text-3xl font-bold text-neutral-900 mb-2">
                  –ó–∞–ø—á–∞—Å—Ç–∏
                </h1>
                <p className="text-neutral-600">
                  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º –±/—É –∑–∞–ø—á–∞—Å—Ç–µ–π
                </p>
              </div>
              <div className="flex items-center space-x-3">
                <Button variant="outline">
                  <Upload className="w-4 h-4 mr-2" />
                  –ò–º–ø–æ—Ä—Ç
                </Button>
                <Button variant="outline">
                  <Download className="w-4 h-4 mr-2" />
                  –≠–∫—Å–ø–æ—Ä—Ç
                </Button>
                <Button variant="primary">
                  <Plus className="w-4 h-4 mr-2" />
                  –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å
                </Button>
              </div>
            </div>

            {/* –§–∏–ª—å—Ç—Ä—ã */}
            <div className="mb-8">
              <Filters />
            </div>

            {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
            <div className="flex items-center justify-between mb-6">
              <div className="flex items-center space-x-4">
                <span className="text-sm text-neutral-600">
                  –ù–∞–π–¥–µ–Ω–æ: {mockParts.length} –∑–∞–ø—á–∞—Å—Ç–µ–π
                </span>
                <div className="flex items-center space-x-1">
                  <Button variant="ghost" size="sm" className="bg-primary text-white">
                    <Grid className="w-4 h-4" />
                  </Button>
                  <Button variant="ghost" size="sm">
                    <List className="w-4 h-4" />
                  </Button>
                </div>
              </div>
              <div className="flex items-center space-x-2">
                <span className="text-sm text-neutral-600">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</span>
                <select className="text-sm border border-neutral-300 rounded px-2 py-1">
                  <option>–ü–æ –¥–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è</option>
                  <option>–ü–æ —Ü–µ–Ω–µ (–≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ)</option>
                  <option>–ü–æ —Ü–µ–Ω–µ (—É–±—ã–≤–∞–Ω–∏–µ)</option>
                  <option>–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
                </select>
              </div>
            </div>

            {/* –°–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {mockParts.map((part) => (
                <PartCard key={part.id} part={part} />
              ))}
            </div>

            {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
            <div className="flex items-center justify-between mt-8">
              <div className="text-sm text-neutral-600">
                –ü–æ–∫–∞–∑–∞–Ω–æ 1-{mockParts.length} –∏–∑ {mockParts.length} –∑–∞–ø—á–∞—Å—Ç–µ–π
              </div>
              <div className="flex items-center space-x-2">
                <Button variant="outline" size="sm" disabled>
                  –ü—Ä–µ–¥—ã–¥—É—â–∞—è
                </Button>
                <Button variant="primary" size="sm">1</Button>
                <Button variant="outline" size="sm" disabled>
                  –°–ª–µ–¥—É—é—â–∞—è
                </Button>
              </div>
            </div>
          </div>
        </main>
      </div>
      
      {/* –ü–∞–Ω–µ–ª—å –æ—Ç–ª–∞–¥–∫–∏ */}
      <DebugPanel />
    </div>
  );
}
