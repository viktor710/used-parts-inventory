"use client";

import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { useRouter } from 'next/navigation';
import { Header } from '@/components/layout/Header';
import { Sidebar } from '@/components/layout/Sidebar';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';
import { Button } from '@/components/ui/Button';
import { CategoryBadge, ConditionBadge, StatusBadge } from '@/components/ui/Badge';
import { ImageGallery } from '@/components/ui/ImageGallery';
import { PartsPageHeader } from '@/components/ui/PageHeader';
import { PartImage } from '@/components/ui/PartImage';


import { DebugPanel } from '@/components/debug/DebugPanel';
import { ToastContainer, useToast } from '@/components/ui/Toast';
import { formatPartsCount } from '@/utils/format';
import { 
  Plus, 
  Search, 
  Filter, 
  Grid, 
  List,
  Eye,
  Edit,
  Trash2,
  Download,
  Upload,
  AlertCircle,
  Package,
  Loader2,
  AlertTriangle
} from 'lucide-react';
import { Part, Car } from '@/types';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–ø—á–∞—Å—Ç–∏
 */
const PartCard: React.FC<{ part: Part; car?: Car }> = ({ part, car }) => {
  const router = useRouter();
  const { showSuccess, showError } = useToast();
  const [deleting, setDeleting] = useState(false);
  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  if (process.env.NODE_ENV === 'development') {
    console.log('üîß [DEBUG] PartCard: –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–ø—á–∞—Å—Ç–∏:', part.id, part.zapchastName);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–ø—á–∞—Å—Ç–∏
  const handleView = () => {
    router.push(`/parts/${part.id}`);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏
  const handleEdit = () => {
    router.push(`/parts/${part.id}/edit`);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏
  const handleDelete = async () => {
    try {
      setDeleting(true);

      const response = await fetch(`/api/parts/${part.id}`, {
        method: 'DELETE',
      });

      const result = await response.json();

      if (result.success) {
        showSuccess('–£—Å–ø–µ—à–Ω–æ', '–ó–∞–ø—á–∞—Å—Ç—å —É–¥–∞–ª–µ–Ω–∞');
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
        window.location.reload();
      } else {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏:', error);
      showError('–û—à–∏–±–∫–∞', error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏');
    } finally {
      setDeleting(false);
      setShowDeleteConfirm(false);
    }
  };
  
  return (
    <>
      <Card className="card-hover group">
        {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏ */}
        <div className="relative">
          {part.images && part.images.length > 0 ? (
            <div className="p-4 pb-0">
              {(() => {
                // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                if (process.env.NODE_ENV === 'development') {
                  console.log('üîß [DEBUG] PartCard: –ó–∞–ø—á–∞—Å—Ç—å:', part.zapchastName, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', part.images.length);
                }
                
                if (part.images.length === 1) {
                  if (process.env.NODE_ENV === 'development') {
                    console.log('üîß [DEBUG] PartCard: –ò—Å–ø–æ–ª—å–∑—É–µ–º PartImage –¥–ª—è –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
                  }
                  return (
                    // –î–ª—è –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º PartImage
                    <PartImage
                      images={part.images}
                      aspectRatio="video"
                      className="mb-3"
                      onClick={() => {
                        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç–∫—Ä—ã—Ç–∏—è –≥–∞–ª–µ—Ä–µ–∏
                        console.log('–û—Ç–∫—Ä—ã—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', part.images[0]);
                      }}
                    />
                  );
                } else {
                  if (process.env.NODE_ENV === 'development') {
                    console.log('üîß [DEBUG] PartCard: –ò—Å–ø–æ–ª—å–∑—É–µ–º ImageGallery –¥–ª—è', part.images.length, '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
                  }
                  return (
                    // –î–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º ImageGallery
                    <ImageGallery 
                      images={part.images} 
                      maxPreview={3}
                      showCount={false}
                      className="mb-3"
                    />
                  );
                }
              })()}
            </div>
          ) : (
            // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            <div className="p-4 pb-0">
              <div className="relative aspect-video rounded-lg overflow-hidden bg-gradient-to-br from-neutral-100 to-neutral-200 flex items-center justify-center group-hover:from-neutral-200 group-hover:to-neutral-300 transition-all duration-200">
                <div className="text-center">
                  <Package className="w-12 h-12 text-neutral-400 mx-auto mb-2" />
                  <p className="text-sm text-neutral-500 font-medium">–ù–µ—Ç —Ñ–æ—Ç–æ</p>
                  <p className="text-xs text-neutral-400">–î–æ–±–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏</p>
                </div>
              </div>
            </div>
          )}
        </div>
        
        <CardContent className="p-6">
          <div className="flex items-start justify-between mb-4">
            <div className="flex-1">
              <h3 className="text-lg font-semibold text-neutral-900 mb-2 group-hover:text-primary transition-colors cursor-pointer" onClick={handleView}>
                {part.zapchastName}
              </h3>
              {car && (
                <p className="text-sm text-neutral-600 mb-3 flex items-center">
                  <span className="inline-block w-2 h-2 bg-primary rounded-full mr-2"></span>
                  {car.brand} {car.model} ({car.year})
                </p>
              )}
              <div className="flex flex-wrap gap-2 mb-3">
                <CategoryBadge category={part.category} />
                <ConditionBadge condition={part.condition} />
                <StatusBadge status={part.status} />
              </div>
            </div>
            <div className="text-right">
              <p className="text-2xl font-bold text-primary">
                ‚ÇΩ{part.price.toLocaleString()}
              </p>
              <p className="text-sm text-neutral-500">
                –ú–µ—Å—Ç–æ: {part.location}
              </p>
            </div>
          </div>
          
          <p className="text-sm text-neutral-700 mb-4 line-clamp-2">
            {part.description}
          </p>
          
          <div className="flex items-center justify-between">
            <div className="text-sm text-neutral-500">
              –ü–æ—Å—Ç–∞–≤—â–∏–∫: {part.supplier}
            </div>
            <div className="flex space-x-2">
              <Button 
                variant="ghost" 
                size="sm" 
                className="hover:bg-primary/10 hover:text-primary"
                onClick={handleView}
                title="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å"
              >
                <Eye className="w-4 h-4" />
              </Button>
              <Button 
                variant="ghost" 
                size="sm" 
                className="hover:bg-primary/10 hover:text-primary"
                onClick={handleEdit}
                title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
              >
                <Edit className="w-4 h-4" />
              </Button>
              <Button 
                variant="ghost" 
                size="sm" 
                className="text-red-600 hover:text-red-700 hover:bg-red-50"
                onClick={() => setShowDeleteConfirm(true)}
                title="–£–¥–∞–ª–∏—Ç—å"
                disabled={deleting}
              >
                {deleting ? (
                  <Loader2 className="w-4 h-4 animate-spin" />
                ) : (
                  <Trash2 className="w-4 h-4" />
                )}
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */}
      {showDeleteConfirm && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 max-w-md w-full mx-4">
            <div className="flex items-center mb-4">
              <AlertTriangle className="w-6 h-6 text-red-500 mr-3" />
              <h3 className="text-lg font-semibold text-neutral-900">
                –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
              </h3>
            </div>
            <p className="text-neutral-600 mb-6">
              –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å "{part.zapchastName}"? 
              –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.
            </p>
            <div className="flex justify-end space-x-3">
              <Button
                variant="outline"
                onClick={() => setShowDeleteConfirm(false)}
                disabled={deleting}
              >
                –û—Ç–º–µ–Ω–∞
              </Button>
                             <Button
                 variant="danger"
                 onClick={handleDelete}
                 disabled={deleting}
               >
                {deleting ? (
                  <>
                    <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                    –£–¥–∞–ª–µ–Ω–∏–µ...
                  </>
                ) : (
                  <>
                    <Trash2 className="w-4 h-4 mr-2" />
                    –£–¥–∞–ª–∏—Ç—å
                  </>
                )}
              </Button>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤
 */
const Filters: React.FC = () => {
  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center">
          <Filter className="w-5 h-5 mr-2" />
          –§–∏–ª—å—Ç—Ä—ã
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          {/* –ü–æ–∏—Å–∫ */}
          <div className="lg:col-span-2">
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –ü–æ–∏—Å–∫
            </label>
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-neutral-400" />
              <input
                type="text"
                placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ, –±—Ä–µ–Ω–¥, –º–æ–¥–µ–ª—å..."
                className="w-full pl-10 pr-4 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
              />
            </div>
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
          <div>
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –ö–∞—Ç–µ–≥–æ—Ä–∏—è
            </label>
            <select className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary">
              <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
              <option value="engine">–î–≤–∏–≥–∞—Ç–µ–ª—å</option>
              <option value="transmission">–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è</option>
              <option value="suspension">–ü–æ–¥–≤–µ—Å–∫–∞</option>
              <option value="brakes">–¢–æ—Ä–º–æ–∑–∞</option>
              <option value="electrical">–≠–ª–µ–∫—Ç—Ä–∏–∫–∞</option>
              <option value="body">–ö—É–∑–æ–≤</option>
              <option value="interior">–°–∞–ª–æ–Ω</option>
              <option value="exterior">–í–Ω–µ—à–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã</option>
              <option value="other">–ü—Ä–æ—á–µ–µ</option>
            </select>
          </div>

          {/* –°—Ç–∞—Ç—É—Å */}
          <div>
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –°—Ç–∞—Ç—É—Å
            </label>
            <select className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary">
              <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
              <option value="available">–î–æ—Å—Ç—É–ø–Ω–∞</option>
              <option value="reserved">–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∞</option>
              <option value="sold">–ü—Ä–æ–¥–∞–Ω–∞</option>
              <option value="scrapped">–£—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞</option>
            </select>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
          <div>
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –¶–µ–Ω–∞ –æ—Ç
            </label>
            <input
              type="number"
              placeholder="‚ÇΩ"
              className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –¶–µ–Ω–∞ –¥–æ
            </label>
            <input
              type="number"
              placeholder="‚ÇΩ"
              className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-neutral-700 mb-2">
              –ì–æ–¥
            </label>
            <input
              type="number"
              placeholder="–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞"
              className="w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
            />
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
        <div className="flex justify-between items-center mt-6">
          <Button variant="outline">
            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </Button>
          <Button variant="primary">
            –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </Button>
        </div>
      </CardContent>
    </Card>
  );
};

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π
 */
export default function PartsPage() {
  const { toasts, removeToast } = useToast();
  const [parts, setParts] = useState<Part[]>([]);
  const [cars, setCars] = useState<Car[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  if (process.env.NODE_ENV === 'development') {
    console.log('üîß [DEBUG] PartsPage: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è');
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const fetchData = async () => {
      try {
        console.log('üîß [DEBUG] PartsPage: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ API');
        setLoading(true);
        setError(null);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–ø—á–∞—Å—Ç–∏ –∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        const [partsResponse, carsResponse] = await Promise.all([
          fetch('/api/parts'),
          fetch('/api/cars')
        ]);

        console.log('üîß [DEBUG] PartsPage: –û—Ç–≤–µ—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã', { 
          partsStatus: partsResponse.status,
          carsStatus: carsResponse.status 
        });

        const [partsResult, carsResult] = await Promise.all([
          partsResponse.json(),
          carsResponse.json()
        ]);

        console.log('üîß [DEBUG] PartsPage: JSON –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã', { 
          partsSuccess: partsResult.success,
          carsSuccess: carsResult.success 
        });

        if (partsResult.success && carsResult.success) {
          console.log('üîß [DEBUG] PartsPage: –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–ø—á–∞—Å—Ç–µ–π:', partsResult.data.data.length);
          console.log('üîß [DEBUG] PartsPage: –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π:', carsResult.data.cars.length);
          
          // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—á–∞—Å—Ç—è—Ö
          partsResult.data.data.forEach((part: Part, index: number) => {
            console.log(`üîß [DEBUG] PartsPage: –ó–∞–ø—á–∞—Å—Ç—å ${index + 1}:`, {
              name: part.zapchastName,
              id: part.id,
              status: part.status,
              imagesCount: part.images.length
            });
          });
          
          console.log('üîß [DEBUG] PartsPage: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ');
          setParts(partsResult.data.data);
          setCars(carsResult.data.cars);
          console.log('üîß [DEBUG] PartsPage: –î–∞–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ');
        } else {
          console.error('üîß [DEBUG] PartsPage: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', partsResult.error || carsResult.error);
          setError(partsResult.error || carsResult.error);
        }
      } catch (error) {
        console.error('üîß [DEBUG] PartsPage: –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
        setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö');
      } finally {
        console.log('üîß [DEBUG] PartsPage: –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen bg-neutral-50">
        <Header />
        <div className="flex h-[calc(100vh-4rem)]">
          <Sidebar />
          <main className="flex-1 overflow-y-auto">
            <div className="container-custom py-8">
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ */}
              <PartsPageHeader
                title="–ó–∞–ø—á–∞—Å—Ç–∏"
                subtitle="–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã..."
                count={0}
              >
                <Button variant="primary" disabled>
                  <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                  –ó–∞–≥—Ä—É–∑–∫–∞...
                </Button>
              </PartsPageHeader>
              
              <div className="flex items-center justify-center h-64">
                <div className="text-center">
                  <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4"></div>
                  <p className="text-neutral-600 mb-2">–ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–ø—á–∞—Å—Ç–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...</p>
                  <p className="text-sm text-neutral-500">–≠—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥</p>
                </div>
              </div>
            </div>
          </main>
        </div>
        <DebugPanel />
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-neutral-50">
        <Header />
        <div className="flex h-[calc(100vh-4rem)]">
          <Sidebar />
          <main className="flex-1 overflow-y-auto">
            <div className="container-custom py-8">
              <div className="flex items-center justify-center h-64">
                <div className="text-center">
                  <AlertCircle className="w-12 h-12 text-error mx-auto mb-4" />
                  <h3 className="text-lg font-semibold text-neutral-900 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
                  <p className="text-neutral-600 mb-4">{error}</p>
                  <Button variant="primary" onClick={() => window.location.reload()}>
                    –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                  </Button>
                </div>
              </div>
            </div>
          </main>
        </div>
        <DebugPanel />
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-neutral-50">
      <Header />
      
      <div className="flex h-[calc(100vh-4rem)]">
        <Sidebar />
        
        <main className="flex-1 overflow-y-auto">
          <div className="container-custom py-8">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
            <PartsPageHeader
              title="–ó–∞–ø—á–∞—Å—Ç–∏"
              subtitle="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º –±/—É –∑–∞–ø—á–∞—Å—Ç–µ–π"
              count={parts.length}
            >
              <div className="flex items-center space-x-3">
                <Button variant="outline">
                  <Upload className="w-4 h-4 mr-2" />
                  –ò–º–ø–æ—Ä—Ç
                </Button>
                <Button variant="outline">
                  <Download className="w-4 h-4 mr-2" />
                  –≠–∫—Å–ø–æ—Ä—Ç
                </Button>
                <Link href="/parts/new">
                  <Button variant="primary">
                    <Plus className="w-4 h-4 mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å
                  </Button>
                </Link>
              </div>
            </PartsPageHeader>

            {/* –§–∏–ª—å—Ç—Ä—ã */}
            <div className="mb-8">
              <Filters />
            </div>

            {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
            <div className="flex flex-col sm:flex-row items-start sm:items-center justify-between mb-6 gap-4">
              <div className="flex items-center space-x-4">
                <span className="text-sm text-neutral-600">
                  –ù–∞–π–¥–µ–Ω–æ: {formatPartsCount(parts.length)}
                </span>
                <div className="flex items-center space-x-1">
                  <Button variant="ghost" size="sm" className="bg-primary text-white">
                    <Grid className="w-4 h-4" />
                  </Button>
                  <Button variant="ghost" size="sm">
                    <List className="w-4 h-4" />
                  </Button>
                </div>
              </div>
              <div className="flex items-center space-x-2">
                <span className="text-sm text-neutral-600">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</span>
                <select className="text-sm border border-neutral-300 rounded px-2 py-1">
                  <option>–ü–æ –¥–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è</option>
                  <option>–ü–æ —Ü–µ–Ω–µ (–≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ)</option>
                  <option>–ü–æ —Ü–µ–Ω–µ (—É–±—ã–≤–∞–Ω–∏–µ)</option>
                  <option>–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
                </select>
              </div>
            </div>

            {/* –°–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {parts.map((part) => {
                const car = cars.find(c => c.id === part.carId);
                return <PartCard key={part.id} part={part} {...(car && { car })} />;
              })}
            </div>

            {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∑–∞–ø—á–∞—Å—Ç–µ–π */}
            {parts.length === 0 && (
              <div className="text-center py-12">
                <Package className="w-16 h-16 text-neutral-400 mx-auto mb-4" />
                <h3 className="text-lg font-semibold text-neutral-900 mb-2">–ó–∞–ø—á–∞—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                <p className="text-neutral-600 mb-4">
                  –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø—á–∞—Å—Ç–µ–π. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞–ø—á–∞—Å—Ç—å!
                </p>
                <Link href="/parts/new">
                  <Button variant="primary">
                    <Plus className="w-4 h-4 mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å
                  </Button>
                </Link>
              </div>
            )}

            {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
            {parts.length > 0 && (
              <div className="flex flex-col sm:flex-row items-center justify-between mt-8 gap-4">
                <div className="text-sm text-neutral-600">
                  –ü–æ–∫–∞–∑–∞–Ω–æ 1-{parts.length} –∏–∑ {formatPartsCount(parts.length)}
                </div>
                <div className="flex items-center space-x-2">
                  <Button variant="outline" size="sm" disabled>
                    –ü—Ä–µ–¥—ã–¥—É—â–∞—è
                  </Button>
                  <Button variant="primary" size="sm">1</Button>
                  <Button variant="outline" size="sm" disabled>
                    –°–ª–µ–¥—É—é—â–∞—è
                  </Button>
                </div>
              </div>
            )}


          </div>
        </main>
      </div>
      
      {/* –ü–∞–Ω–µ–ª—å –æ—Ç–ª–∞–¥–∫–∏ */}
      <DebugPanel />
      
      {/* Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
      <ToastContainer toasts={toasts} onRemove={removeToast} />
    </div>
  );
}
