"use client";

import React, { useState, useEffect } from 'react';
import dynamic from 'next/dynamic';
import { Header } from '@/components/layout/Header';
import { Sidebar } from '@/components/layout/Sidebar';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';
import { Button } from '@/components/ui/Button';
import { PageHeader } from '@/components/ui/PageHeader';

import { 
  FileText, 
  Download, 
  Calendar, 
  TrendingUp, 
  DollarSign,
  Package,
  ShoppingCart,
  Users,
  Car,
  Search
} from 'lucide-react';

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é
const DebugPanel = dynamic(() => import('@/components/debug/DebugPanel').then(mod => ({ default: mod.DebugPanel })), {
  ssr: false
});

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç—á–µ—Ç–∞
 */
interface Report {
  id: string;
  title: string;
  description: string;
  type: 'sales' | 'inventory' | 'financial' | 'customers' | 'cars';
  format: 'pdf' | 'excel' | 'csv';
  lastGenerated?: string;
  status: 'available' | 'generating' | 'error';
  icon: React.ComponentType<any>;
}

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç—á–µ—Ç–æ–≤
 */
export default function ReportsPage() {
  const [reports, setReports] = useState<Report[]>([]);
  const [loading, setLoading] = useState(true);
  const [selectedType, setSelectedType] = useState<string>('all');
  const [searchQuery, setSearchQuery] = useState('');

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  if (process.env.NODE_ENV === 'development') {
    console.log('üîß [DEBUG] ReportsPage: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è');
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤
  useEffect(() => {
    const initializeReports = () => {
      const defaultReports: Report[] = [
        {
          id: 'sales-summary',
          title: '–°–≤–æ–¥–∫–∞ –ø—Ä–æ–¥–∞–∂',
          description: '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥',
          type: 'sales',
          format: 'pdf',
          status: 'available',
          icon: ShoppingCart
        },
        {
          id: 'inventory-status',
          title: '–°—Ç–∞—Ç—É—Å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è',
          description: '–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∫–ª–∞–¥–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∑–∞–ø—á–∞—Å—Ç–µ–π',
          type: 'inventory',
          format: 'excel',
          status: 'available',
          icon: Package
        },
        {
          id: 'financial-report',
          title: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç',
          description: '–î–æ—Ö–æ–¥—ã, —Ä–∞—Å—Ö–æ–¥—ã –∏ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å',
          type: 'financial',
          format: 'pdf',
          status: 'available',
          icon: DollarSign
        },
        {
          id: 'customer-analytics',
          title: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤',
          description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º –∏ –∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
          type: 'customers',
          format: 'excel',
          status: 'available',
          icon: Users
        },
        {
          id: 'cars-inventory',
          title: '–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π',
          description: '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ',
          type: 'cars',
          format: 'csv',
          status: 'available',
          icon: Car
        },
        {
          id: 'monthly-sales',
          title: '–ú–µ—Å—è—á–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏',
          description: '–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∑–∞ –º–µ—Å—è—Ü',
          type: 'sales',
          format: 'pdf',
          status: 'available',
          icon: TrendingUp
        }
      ];

      setReports(defaultReports);
      setLoading(false);
    };

    initializeReports();
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤
  const filteredReports = reports.filter(report => {
    const matchesType = selectedType === 'all' || report.type === selectedType;
    const matchesSearch = report.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         report.description.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesType && matchesSearch;
  });

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
  const generateReport = async (reportId: string) => {
    const report = reports.find(r => r.id === reportId);
    if (!report) return;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ "–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è"
    setReports(prev => prev.map(r => 
      r.id === reportId ? { ...r, status: 'generating' as const } : r
    ));

    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
      setReports(prev => prev.map(r => 
        r.id === reportId ? { 
          ...r, 
          status: 'available' as const,
          lastGenerated: new Date().toLocaleString('ru-RU')
        } : r
      ));

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      if (process.env.NODE_ENV === 'development') {
        console.log(`‚úÖ [DEBUG] –û—Ç—á–µ—Ç "${report.title}" —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞:', error);
      setReports(prev => prev.map(r => 
        r.id === reportId ? { ...r, status: 'error' as const } : r
      ));
    }
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞
  const getTypeColor = (type: string) => {
    switch (type) {
      case 'sales': return 'text-blue-600 bg-blue-50';
      case 'inventory': return 'text-green-600 bg-green-50';
      case 'financial': return 'text-purple-600 bg-purple-50';
      case 'customers': return 'text-orange-600 bg-orange-50';
      case 'cars': return 'text-red-600 bg-red-50';
      default: return 'text-gray-600 bg-gray-50';
    }
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∞
  const getFormatColor = (format: string) => {
    switch (format) {
      case 'pdf': return 'text-red-600 bg-red-50';
      case 'excel': return 'text-green-600 bg-green-50';
      case 'csv': return 'text-blue-600 bg-blue-50';
      default: return 'text-gray-600 bg-gray-50';
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-neutral-50">
        <Header />
        <div className="flex h-[calc(100vh-4rem)]">
          <Sidebar />
          <main className="flex-1 overflow-y-auto">
            <div className="container-custom py-8">
              <div className="animate-pulse">
                <div className="h-8 bg-neutral-200 rounded w-1/4 mb-4"></div>
                <div className="h-4 bg-neutral-200 rounded w-1/2 mb-8"></div>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {[...Array(6)].map((_, i) => (
                    <div key={i} className="h-48 bg-neutral-200 rounded"></div>
                  ))}
                </div>
              </div>
            </div>
          </main>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-neutral-50">
      <Header />
      
      <div className="flex h-[calc(100vh-4rem)]">
        <Sidebar />
        
        <main className="flex-1 overflow-y-auto">
          <div className="container-custom py-8">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
            <PageHeader
              title="–û—Ç—á–µ—Ç—ã"
              subtitle="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã"
              count={filteredReports.length}
            >
              <div className="flex items-center space-x-3">
                <Button variant="outline">
                  <Calendar className="w-4 h-4 mr-2" />
                  –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                </Button>
                <Button variant="outline">
                  <Download className="w-4 h-4 mr-2" />
                  –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö
                </Button>
              </div>
            </PageHeader>

            {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
            <div className="mb-8">
              <div className="flex flex-col sm:flex-row gap-4">
                {/* –ü–æ–∏—Å–∫ */}
                <div className="flex-1">
                  <div className="relative">
                    <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400 w-4 h-4" />
                    <input
                      type="text"
                      placeholder="–ü–æ–∏—Å–∫ –æ—Ç—á–µ—Ç–æ–≤..."
                      value={searchQuery}
                      onChange={(e) => setSearchQuery(e.target.value)}
                      className="w-full pl-10 pr-4 py-2 border border-neutral-300 rounded-md focus:ring-2 focus:ring-primary focus:border-transparent"
                    />
                  </div>
                </div>

                {/* –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É */}
                <div className="sm:w-48">
                  <select
                    value={selectedType}
                    onChange={(e) => setSelectedType(e.target.value)}
                    className="w-full px-3 py-2 border border-neutral-300 rounded-md focus:ring-2 focus:ring-primary focus:border-transparent"
                  >
                    <option value="all">–í—Å–µ —Ç–∏–ø—ã</option>
                    <option value="sales">–ü—Ä–æ–¥–∞–∂–∏</option>
                    <option value="inventory">–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å</option>
                    <option value="financial">–§–∏–Ω–∞–Ω—Å—ã</option>
                    <option value="customers">–ö–ª–∏–µ–Ω—Ç—ã</option>
                    <option value="cars">–ê–≤—Ç–æ–º–æ–±–∏–ª–∏</option>
                  </select>
                </div>
              </div>
            </div>

            {/* –°–µ—Ç–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                             {filteredReports.map((report) => {
                 const TypeIcon = report.icon;
                
                return (
                  <Card key={report.id} className="hover:shadow-lg transition-shadow duration-200">
                    <CardHeader className="pb-3">
                      <div className="flex items-start justify-between">
                        <div className="flex items-center space-x-3">
                          <div className="p-2 rounded-lg bg-primary/10">
                            <TypeIcon className="w-5 h-5 text-primary" />
                          </div>
                          <div>
                            <CardTitle className="text-lg">{report.title}</CardTitle>
                            <p className="text-sm text-neutral-600 mt-1">{report.description}</p>
                          </div>
                        </div>
                      </div>
                    </CardHeader>
                    
                    <CardContent className="pt-0">
                      <div className="space-y-4">
                        {/* –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞ */}
                        <div className="flex items-center justify-between text-sm">
                          <div className="flex items-center space-x-2">
                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${getTypeColor(report.type)}`}>
                              {report.type}
                            </span>
                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${getFormatColor(report.format)}`}>
                              {report.format.toUpperCase()}
                            </span>
                          </div>
                        </div>

                        {/* –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
                        {report.lastGenerated && (
                          <div className="text-xs text-neutral-500">
                            –ü–æ—Å–ª–µ–¥–Ω—è—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è: {report.lastGenerated}
                          </div>
                        )}

                        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                        <div className="flex items-center space-x-2">
                          <Button
                            onClick={() => generateReport(report.id)}
                            disabled={report.status === 'generating'}
                            className="flex-1"
                            variant="primary"
                          >
                            {report.status === 'generating' ? (
                              <>
                                <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2"></div>
                                –ì–µ–Ω–µ—Ä–∞—Ü–∏—è...
                              </>
                            ) : (
                              <>
                                <Download className="w-4 h-4 mr-2" />
                                –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
                              </>
                            )}
                          </Button>
                          
                          {report.status === 'available' && report.lastGenerated && (
                            <Button variant="outline" size="sm">
                              <Download className="w-4 h-4" />
                            </Button>
                          )}
                        </div>

                        {/* –°—Ç–∞—Ç—É—Å */}
                        {report.status === 'error' && (
                          <div className="text-xs text-red-600 bg-red-50 p-2 rounded">
                            –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
                          </div>
                        )}
                      </div>
                    </CardContent>
                  </Card>
                );
              })}
            </div>

            {/* –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */}
            {filteredReports.length === 0 && (
              <div className="text-center py-12">
                <FileText className="w-16 h-16 text-neutral-300 mx-auto mb-4" />
                <h3 className="text-lg font-medium text-neutral-900 mb-2">–û—Ç—á–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                <p className="text-neutral-600 mb-4">
                  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
                </p>
                <Button
                  onClick={() => {
                    setSelectedType('all');
                    setSearchQuery('');
                  }}
                  variant="outline"
                >
                  –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                </Button>
              </div>
            )}
          </div>
        </main>
        <DebugPanel />
      </div>
    </div>
  );
}
