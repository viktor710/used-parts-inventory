import React from 'react';
import Link from 'next/link';
import Image from 'next/image';
import { Header } from '@/components/layout/Header';
import { Sidebar } from '@/components/layout/Sidebar';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';
import { Button } from '@/components/ui/Button';
import { Badge } from '@/components/ui/Badge';
import { CarsPageHeader } from '@/components/ui/PageHeader';
import { getAllCars } from '@/lib/cars';
import { Car, BodyType, FuelType } from '@/types';

import { 
  Car as CarIcon, 
  Plus, 
  Calendar,
  Gauge,
  Hash,
  Palette
} from 'lucide-react';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
 */
const CarCard: React.FC<{ car: Car }> = ({ car }) => {
  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–∏–ø–æ–≤
  const getBodyTypeLabel = (type: BodyType): string => {
    const labels: Record<BodyType, string> = {
      sedan: '–°–µ–¥–∞–Ω',
      hatchback: '–•—ç—Ç—á–±–µ–∫',
      wagon: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª',
      suv: '–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫',
      coupe: '–ö—É–ø–µ',
      convertible: '–ö–∞–±—Ä–∏–æ–ª–µ—Ç',
      pickup: '–ü–∏–∫–∞–ø',
      van: '–ú–∏–Ω–∏–≤—ç–Ω',
      other: '–ü—Ä–æ—á–µ–µ'
    };
    return labels[type];
  };

  const getFuelTypeLabel = (type: FuelType): string => {
    const labels: Record<FuelType, string> = {
      gasoline: '–ë–µ–Ω–∑–∏–Ω',
      diesel: '–î–∏–∑–µ–ª—å',
      hybrid: '–ì–∏–±—Ä–∏–¥',
      electric: '–≠–ª–µ–∫—Ç—Ä–æ',
      lpg: '–ì–∞–∑',
      other: '–ü—Ä–æ—á–µ–µ'
    };
    return labels[type];
  };

  return (
    <Card className="card-hover">
      {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è */}
      {car.images && Array.isArray(car.images) && car.images.length > 0 && (
        <div className="p-4 pb-0">
          <div className="relative h-32 bg-neutral-100 rounded-lg overflow-hidden mb-3">
            <Image
              src={car.images[0] || ''}
              alt={`${car.brand} ${car.model}`}
              fill
              className="object-cover"
            />
            {car.images.length > 1 && (
              <div className="absolute top-2 right-2 bg-black bg-opacity-50 text-white text-xs px-2 py-1 rounded">
                +{car.images.length - 1}
              </div>
            )}
          </div>
        </div>
      )}
      
      <CardHeader className="pb-3">
        <div className="flex items-center justify-between">
          <CardTitle className="text-lg font-semibold">
            {car.brand} {car.model}
          </CardTitle>
          <div className="flex gap-2">
            <Badge variant="default" className="text-xs">
              {car.year}
            </Badge>
            <Badge variant="info" className="text-xs">
              {getBodyTypeLabel(car.bodyType)}
            </Badge>
          </div>
        </div>
      </CardHeader>
      <CardContent className="space-y-3">
        <div className="grid grid-cols-2 gap-3 text-sm">
          <div className="flex items-center gap-2">
            <Gauge className="w-4 h-4 text-neutral-500" />
            <span>{car.engineVolume}</span>
          </div>
          <div className="flex items-center gap-2">
            <Hash className="w-4 h-4 text-neutral-500" />
            <span>{car.transmission}</span>
          </div>
          <div className="flex items-center gap-2">
            <CarIcon className="w-4 h-4 text-neutral-500" />
            <span>{getFuelTypeLabel(car.fuelType)}</span>
          </div>
          <div className="flex items-center gap-2">
            <Palette className="w-4 h-4 text-neutral-500" />
            <span>{car.color}</span>
          </div>
        </div>
        
        <div className="flex items-center gap-2 text-sm text-neutral-600">
          <Calendar className="w-4 h-4" />
          <span>–ü—Ä–æ–±–µ–≥: {car.mileage.toLocaleString()} –∫–º</span>
        </div>
        
        {car.description && (
          <p className="text-sm text-neutral-600 line-clamp-2">
            {car.description}
          </p>
        )}
        
        <div className="flex items-center justify-between pt-2">
          <div className="text-xs text-neutral-500">
            VIN: {car.vin}
          </div>
          <div className="flex gap-2">
            <Link href={`/cars/${car.id}`}>
              <Button variant="outline" size="sm">
                –ü—Ä–æ—Å–º–æ—Ç—Ä
              </Button>
            </Link>
            <Link href={`/cars/${car.id}/edit`}>
              <Button variant="outline" size="sm">
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            </Link>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è)
 */
export default async function CarsPage() {
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  if (process.env.NODE_ENV === 'development') {
    console.log('üîß [DEBUG] CarsPage: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π)');
  }

  // –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  const cars = await getAllCars();

  return (
    <div className="min-h-screen bg-neutral-50">
      <Header />
      <div className="flex">
        <Sidebar />
        <main className="flex-1 p-6">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∏ */}
          <CarsPageHeader
            title="–ê–≤—Ç–æ–º–æ–±–∏–ª–∏"
            subtitle="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏ –≤ —Å–∏—Å—Ç–µ–º–µ —É—á–µ—Ç–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π"
            count={cars.length}
          >
            <Link href="/cars/new">
              <Button className="flex items-center gap-2">
                <Plus className="w-4 h-4" />
                –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å
              </Button>
            </Link>
          </CarsPageHeader>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ */}
          <Card className="mb-6">
            <CardContent className="p-4">
              <div className="text-sm text-neutral-600">
                <p>–î–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä (Ctrl+F) –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.</p>
              </div>
            </CardContent>
          </Card>

          {/* –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π */}
          {cars.length === 0 ? (
            <Card>
              <CardContent className="p-8 text-center">
                <CarIcon className="w-12 h-12 text-neutral-400 mx-auto mb-4" />
                <h3 className="text-lg font-medium text-neutral-900 mb-2">
                  –ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                </h3>
                <p className="text-neutral-600 mb-4">
                  –í —Å–∏—Å—Ç–µ–º–µ –ø–æ–∫–∞ –Ω–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.
                </p>
                <Link href="/cars/new">
                  <Button>
                    <Plus className="w-4 h-4 mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å
                  </Button>
                </Link>
              </CardContent>
            </Card>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {cars.map((car) => (
                <CarCard key={car.id} car={car} />
              ))}
            </div>
          )}
        </main>
      </div>
    </div>
  );
}
