async function testPartLoading() {
  const baseUrl = 'http://localhost:3000';
  
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—á–∞—Å—Ç–∏...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π
    console.log('\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π');
    const partsResponse = await fetch(`${baseUrl}/api/parts`);
    const partsResult = await partsResponse.json();
    
    if (!partsResult.success || !partsResult.data?.data?.length) {
      console.error('‚ùå –ù–µ—Ç –∑–∞–ø—á–∞—Å—Ç–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      return;
    }
    
    const firstPart = partsResult.data.data[0];
    console.log('‚úÖ –ü–µ—Ä–≤–∞—è –∑–∞–ø—á–∞—Å—Ç—å:', firstPart.zapchastName, '(ID:', firstPart.id + ')');
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–ø—á–∞—Å—Ç—å
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–ø—á–∞—Å—Ç–∏');
    const partResponse = await fetch(`${baseUrl}/api/parts/${firstPart.id}`);
    const partResult = await partResponse.json();
    
    if (!partResult.success) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏:', partResult.error);
      return;
    }
    
    const partData = partResult.data;
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω—ã:');
    console.log('   - –ù–∞–∑–≤–∞–Ω–∏–µ:', partData.zapchastName);
    console.log('   - –ö–∞—Ç–µ–≥–æ—Ä–∏—è:', partData.category);
    console.log('   - –°–æ—Å—Ç–æ—è–Ω–∏–µ:', partData.condition);
    console.log('   - –°—Ç–∞—Ç—É—Å:', partData.status);
    console.log('   - –¶–µ–Ω–∞:', partData.price);
    console.log('   - carId:', partData.carId);
    console.log('   - purchaseDate:', partData.purchaseDate);
    console.log('   - createdAt:', partData.createdAt);
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å
    if (partData.carId) {
      console.log('\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è');
      const carResponse = await fetch(`${baseUrl}/api/cars/${partData.carId}`);
      const carResult = await carResponse.json();
      
      if (carResult.success) {
        const carData = carResult.data;
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ–ª—É—á–µ–Ω—ã:');
        console.log('   - –ú–∞—Ä–∫–∞:', carData.brand);
        console.log('   - –ú–æ–¥–µ–ª—å:', carData.model);
        console.log('   - –ì–æ–¥:', carData.year);
        console.log('   - VIN:', carData.vin);
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è:', carResult.error);
      }
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
    console.log('\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π');
    const carsResponse = await fetch(`${baseUrl}/api/cars`);
    const carsResult = await carsResponse.json();
    
    if (carsResult.success) {
      const carsData = carsResult.data.cars || carsResult.data.data || [];
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π:', carsData.length);
      carsData.forEach((car: any, index: number) => {
        console.log(`   ${index + 1}. ${car.brand} ${car.model} (${car.year}) - ID: ${car.id}`);
      });
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π:', carsResult.error);
    }
    
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

testPartLoading();
