#!/usr/bin/env node

/**
 * –ï–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –≤—Å–µ—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö —Å–±–æ—Ä–∫–∏ –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
 */

const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  dim: '\x1b[2m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m',
  white: '\x1b[37m',
  gray: '\x1b[90m'
};

const style = {
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π
  info: (text) => `${colors.cyan}‚ÑπÔ∏è  ${text}${colors.reset}`,
  success: (text) => `${colors.green}‚úÖ ${text}${colors.reset}`,
  warning: (text) => `${colors.yellow}‚ö†Ô∏è  ${text}${colors.reset}`,
  error: (text) => `${colors.red}‚ùå ${text}${colors.reset}`,
  
  // –≠—Ç–∞–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–∞
  step: (text) => `${colors.blue}üîß ${text}${colors.reset}`,
  process: (text) => `${colors.magenta}‚öôÔ∏è  ${text}${colors.reset}`,
  build: (text) => `${colors.cyan}üèóÔ∏è  ${text}${colors.reset}`,
  generate: (text) => `${colors.blue}üî® ${text}${colors.reset}`,
  
  // –û–ø–µ—Ä–∞—Ü–∏–∏
  clean: (text) => `${colors.white}üóëÔ∏è  ${text}${colors.reset}`,
  check: (text) => `${colors.cyan}üîç ${text}${colors.reset}`,
  install: (text) => `${colors.magenta}üì¶ ${text}${colors.reset}`,
  test: (text) => `${colors.yellow}üß™ ${text}${colors.reset}`,
  
  // –°—Ç–∞—Ç—É—Å—ã
  loading: (text) => `${colors.gray}‚è≥ ${text}${colors.reset}`,
  done: (text) => `${colors.green}üéâ ${text}${colors.reset}`,
  skip: (text) => `${colors.yellow}‚è≠Ô∏è  ${text}${colors.reset}`,
  
  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ
  header: (text) => `${colors.bright}${colors.cyan}üöÄ ${text}${colors.reset}`,
  section: (text) => `${colors.bright}${colors.blue}üìã ${text}${colors.reset}`,
  divider: () => `${colors.gray}${'‚îÄ'.repeat(60)}${colors.reset}`,
  
  // –°—á–µ—Ç—á–∏–∫–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å
  progress: (current, total, text) => 
    `${colors.cyan}[${current}/${total}] ${text}${colors.reset}`,
  
  // –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  time: (text, duration) => 
    `${colors.gray}‚è±Ô∏è  ${text}: ${duration}ms${colors.reset}`,
  
  // –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤
  size: (text, size) => 
    `${colors.cyan}üìä ${text}: ${size}${colors.reset}`,
  
  // –ü—É—Ç–∏ –∏ —Ñ–∞–π–ª—ã
  file: (text) => `${colors.white}üìÅ ${text}${colors.reset}`,
  route: (text) => `${colors.cyan}üõ£Ô∏è  ${text}${colors.reset}`
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { style, colors };
}

// –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏–ª–∏ –∫–∞–∫ –º–æ–¥—É–ª—å
if (typeof window !== 'undefined') {
  window.buildStyles = { style, colors };
}

module.exports = { style, colors };
