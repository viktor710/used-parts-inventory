async function testAPI() {
  const baseUrl = 'http://localhost:3000'
  
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...')
  
  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
    console.log('\nüöó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π:')
    const carsResponse = await fetch(`${baseUrl}/api/cars`)
    const carsData = await carsResponse.json()
    
    console.log('–°—Ç–∞—Ç—É—Å:', carsResponse.status)
    console.log('–î–∞–Ω–Ω—ã–µ:', JSON.stringify(carsData, null, 2))
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∑–∞–ø—á–∞—Å—Ç–µ–π
    console.log('\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–ø—á–∞—Å—Ç–µ–π:')
    const partsResponse = await fetch(`${baseUrl}/api/parts`)
    const partsData = await partsResponse.json()
    
    console.log('–°—Ç–∞—Ç—É—Å:', partsResponse.status)
    console.log('–î–∞–Ω–Ω—ã–µ:', JSON.stringify(partsData, null, 2))
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error)
  }
}

testAPI()
