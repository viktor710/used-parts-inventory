/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç Winston —Å —Ä–æ—Ç–∞—Ü–∏–µ–π —Ñ–∞–π–ª–æ–≤
 */

import winston from 'winston';
import DailyRotateFile from 'winston-daily-rotate-file';
import fs from 'fs';
import path from 'path';

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É logs –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const logsDir = path.join(process.cwd(), 'logs');
if (!fs.existsSync(logsDir)) {
  fs.mkdirSync(logsDir, { recursive: true });
}

console.log('üß™ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç Winston —Å —Ä–æ—Ç–∞—Ü–∏–µ–π —Ñ–∞–π–ª–æ–≤...\n');

// –°–æ–∑–¥–∞–µ–º –ª–æ–≥–≥–µ—Ä —Å —Ä–æ—Ç–∞—Ü–∏–µ–π
const logger = winston.createLogger({
  level: 'info',
  format: winston.format.combine(
    winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),
    winston.format.errors({ stack: true }),
    winston.format.json()
  ),
  transports: [
    // –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    new winston.transports.Console({
      format: winston.format.combine(
        winston.format.colorize(),
        winston.format.simple()
      )
    }),
    
    // –†–æ—Ç–∞—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö –ª–æ–≥–æ–≤
    new DailyRotateFile({
      filename: path.join(logsDir, 'final-combined-%DATE%.log'),
      datePattern: 'YYYY-MM-DD',
      zippedArchive: true,
      maxSize: '20m',
      maxFiles: '14d'
    }),
    
    // –†–æ—Ç–∞—Ü–∏—è –¥–ª—è –æ—à–∏–±–æ–∫
    new DailyRotateFile({
      filename: path.join(logsDir, 'final-error-%DATE%.log'),
      datePattern: 'YYYY-MM-DD',
      zippedArchive: true,
      maxSize: '20m',
      maxFiles: '14d',
      level: 'error'
    })
  ]
});

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logger.info('–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', { 
  test: 'final', 
  timestamp: new Date().toISOString(),
  environment: 'test'
});

logger.warn('–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç: –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', { 
  warning: 'test warning',
  severity: 'medium'
});

logger.error('–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç: –æ—à–∏–±–∫–∞', { 
  errorCode: 'FINAL_ERR_001',
  details: '–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ—Ç–∞—Ü–∏–∏',
  stack: new Error().stack
});

logger.info('–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç: –µ—â–µ –æ–¥–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', { 
  message: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
  data: { key: 'value', number: 42 }
});

console.log('\n‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
console.log('üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É logs/ –¥–ª—è —Ñ–∞–π–ª–æ–≤:');
console.log('   - final-combined-YYYY-MM-DD.log');
console.log('   - final-error-YYYY-MM-DD.log');
console.log('üîÑ –§–∞–π–ª—ã –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–æ—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ –¥–Ω—è–º');
console.log('üì¶ –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç —Å–∂–∏–º–∞—Ç—å—Å—è –≤ .gz –∞—Ä—Ö–∏–≤—ã');
