#!/usr/bin/env tsx

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 * –°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É data –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç SQLite –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
 */

import fs from 'fs';
import path from 'path';
import { db } from '../lib/database';
import { CreatePartInput, CreateCarInput } from '../types';

console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const dataDir = path.join(process.cwd(), 'data');
if (!fs.existsSync(dataDir)) {
  fs.mkdirSync(dataDir, { recursive: true });
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ data');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
try {
  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  const stats = db.getInventoryStats();
  console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  console.log(`üìä –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${stats.totalParts} –∑–∞–ø—á–∞—Å—Ç–µ–π`);
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  process.exit(1);
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –±–∞–∑–∞ –ø—É—Å—Ç–∞—è
const stats = db.getInventoryStats();
const carStats = db.getCarStats();

if (stats.totalParts === 0 && carStats.totalCars === 0) {
  console.log('üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
  
  // –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
  const testCars: CreateCarInput[] = [
    {
      brand: 'BMW',
      model: 'E46 325i',
      year: 2003,
      bodyType: 'sedan',
      fuelType: 'gasoline',
      engineVolume: '2.5L',
      transmission: '5MT',
      mileage: 150000,
      vin: 'WBAVB13506PT12345',
      color: '–ß–µ—Ä–Ω—ã–π',
      description: 'BMW E46 325i –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –ø–æ–ª–Ω–∞—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è',
      images: [],
      notes: '–ê–≤—Ç–æ–º–æ–±–∏–ª—å —Ä–∞–∑–æ–±—Ä–∞–Ω –Ω–∞ –∑–∞–ø—á–∞—Å—Ç–∏',
    },
    {
      brand: 'Toyota',
      model: 'Camry',
      year: 2010,
      bodyType: 'sedan',
      fuelType: 'gasoline',
      engineVolume: '2.4L',
      transmission: '5MT',
      mileage: 120000,
      vin: '4T1BF1FK0CU123456',
      color: '–°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π',
      description: 'Toyota Camry –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏',
      images: [],
      notes: '–ê–≤—Ç–æ–º–æ–±–∏–ª—å —Ä–∞–∑–æ–±—Ä–∞–Ω –Ω–∞ –∑–∞–ø—á–∞—Å—Ç–∏',
    },
    {
      brand: 'Honda',
      model: 'Civic',
      year: 2015,
      bodyType: 'hatchback',
      fuelType: 'gasoline',
      engineVolume: '1.8L',
      transmission: '6MT',
      mileage: 80000,
      vin: '1HGBH41JXMN123456',
      color: '–ë–µ–ª—ã–π',
      description: 'Honda Civic –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏',
      images: [],
      notes: '–ê–≤—Ç–æ–º–æ–±–∏–ª—å —Ä–∞–∑–æ–±—Ä–∞–Ω –Ω–∞ –∑–∞–ø—á–∞—Å—Ç–∏',
    },
    {
      brand: 'Volkswagen',
      model: 'Golf',
      year: 2012,
      bodyType: 'hatchback',
      fuelType: 'diesel',
      engineVolume: '2.0L',
      transmission: '6MT',
      mileage: 180000,
      vin: 'WVWZZZ1KZAW123456',
      color: '–°–∏–Ω–∏–π',
      description: 'VW Golf —Å –¥–∏–∑–µ–ª—å–Ω—ã–º –¥–≤–∏–≥–∞—Ç–µ–ª–µ–º',
      images: [],
      notes: '–ê–≤—Ç–æ–º–æ–±–∏–ª—å —Ä–∞–∑–æ–±—Ä–∞–Ω –Ω–∞ –∑–∞–ø—á–∞—Å—Ç–∏',
    },
  ];

  // –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
  const createdCars: string[] = [];
  testCars.forEach((car, index) => {
    try {
      const newCar = db.createCar(car);
      createdCars.push(newCar.id);
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∞–≤—Ç–æ–º–æ–±–∏–ª—å ${index + 1}: ${newCar.brand} ${newCar.model}`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è ${index + 1}:`, error);
    }
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —Å–æ–∑–¥–∞–Ω—ã
  if (createdCars.length < 4) {
    console.error('‚ùå –ù–µ –≤—Å–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—á–∞—Å—Ç–µ–π.');
    process.exit(1);
  }

  // –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ–º –∑–∞–ø—á–∞—Å—Ç–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏
  const testParts: CreatePartInput[] = [
    {
      name: '–î–≤–∏–≥–∞—Ç–µ–ª—å BMW M54 2.5L',
      category: 'engine',
      carId: createdCars[0]!, // BMW
      condition: 'good',
      status: 'available',
      price: 85000,
      description: '–î–≤–∏–≥–∞—Ç–µ–ª—å BMW M54 2.5L –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –ø—Ä–æ–±–µ–≥ 150,000 –∫–º',
      location: '–°–∫–ª–∞–¥ –ê, –ø–æ–ª–∫–∞ 1',
      supplier: '–ê–≤—Ç–æ—Ä–∞–∑–±–æ—Ä–∫–∞ BMW',
      purchaseDate: new Date('2024-01-15'),
      purchasePrice: 65000,
      images: [],
      notes: '–ü—Ä–æ–≤–µ—Ä–µ–Ω, –≥–æ—Ç–æ–≤ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ. –ö–æ–º–ø–ª–µ–∫—Ç –ø–æ–ª–Ω—ã–π.',
    },
    {
      name: '–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á 5MT Toyota',
      category: 'transmission',
      carId: createdCars[1]!, // Toyota
      condition: 'excellent',
      status: 'available',
      price: 45000,
      description: '–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –∫–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏',
      location: '–°–∫–ª–∞–¥ –ë, –ø–æ–ª–∫–∞ 3',
      supplier: 'Toyota Parts',
      purchaseDate: new Date('2024-01-10'),
      purchasePrice: 35000,
      images: [],
      notes: '–ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –Ω–∞ —Å—Ç–µ–Ω–¥–µ, —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ.',
    },
    {
      name: '–¢–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏ Brembo',
      category: 'brakes',
      carId: createdCars[0]!, // BMW
      condition: 'excellent',
      status: 'available',
      price: 8000,
      description: '–ü–µ—Ä–µ–¥–Ω–∏–µ —Ç–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏ Brembo, –Ω–æ–≤—ã–µ',
      location: '–°–∫–ª–∞–¥ –ê, –ø–æ–ª–∫–∞ 5',
      supplier: 'Brembo Official',
      purchaseDate: new Date('2024-01-05'),
      purchasePrice: 6000,
      images: [],
      notes: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏, –≤ —É–ø–∞–∫–æ–≤–∫–µ.',
    },
    {
      name: '–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä—ã –ø–µ—Ä–µ–¥–Ω–∏–µ KYB',
      category: 'suspension',
      carId: createdCars[2]!, // Honda
      condition: 'good',
      status: 'available',
      price: 12000,
      description: '–ü–µ—Ä–µ–¥–Ω–∏–µ –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä—ã KYB –¥–ª—è Honda Civic',
      location: '–°–∫–ª–∞–¥ –í, –ø–æ–ª–∫–∞ 2',
      supplier: 'KYB Parts',
      purchaseDate: new Date('2024-01-08'),
      purchasePrice: 9000,
      images: [],
      notes: '–ë/—É, –Ω–æ –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.',
    },
    {
      name: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Bosch',
      category: 'electrical',
      carId: createdCars[3]!, // VW
      condition: 'fair',
      status: 'available',
      price: 15000,
      description: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Bosch –¥–ª—è VW Golf',
      location: '–°–∫–ª–∞–¥ –ê, –ø–æ–ª–∫–∞ 7',
      supplier: 'Bosch Service',
      purchaseDate: new Date('2024-01-12'),
      purchasePrice: 12000,
      images: [],
      notes: '–¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π.',
    },
  ];

  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—á–∞—Å—Ç–∏
  testParts.forEach((part, index) => {
    try {
      const newPart = db.createPart(part);
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø—á–∞—Å—Ç—å ${index + 1}: ${newPart.name}`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø—á–∞—Å—Ç–∏ ${index + 1}:`, error);
    }
  });

  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
}

console.log('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
console.log('üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤: data/inventory.db');
console.log('üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π: npm run dev');
