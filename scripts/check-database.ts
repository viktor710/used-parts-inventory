import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ')
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö
    const carsCount = await prisma.car.count()
    const partsCount = await prisma.part.count()
    const suppliersCount = await prisma.supplier.count()
    const customersCount = await prisma.customer.count()
    const salesCount = await prisma.sale.count()
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:')
    console.log(`üöó –ê–≤—Ç–æ–º–æ–±–∏–ª–∏: ${carsCount}`)
    console.log(`üîß –ó–∞–ø—á–∞—Å—Ç–∏: ${partsCount}`)
    console.log(`üè¢ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏: ${suppliersCount}`)
    console.log(`üë• –ö–ª–∏–µ–Ω—Ç—ã: ${customersCount}`)
    console.log(`üí∞ –ü—Ä–æ–¥–∞–∂–∏: ${salesCount}`)
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    if (carsCount > 0) {
      console.log('\nüöó –ü—Ä–∏–º–µ—Ä—ã –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π:')
      const cars = await prisma.car.findMany({ take: 3 })
      cars.forEach(car => {
        console.log(`  - ${car.brand} ${car.model} (${car.year})`)
      })
    }
    
    if (partsCount > 0) {
      console.log('\nüîß –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—á–∞—Å—Ç–µ–π:')
      const parts = await prisma.part.findMany({ take: 3 })
      parts.forEach(part => {
        console.log(`  - ${part.zapchastName} (${part.status})`)
      })
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkDatabase()
