const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ SVG —Ñ–∞–π–ª–∞
const svgPath = path.join(__dirname, '../public/placeholder-image.svg');
const pngPath = path.join(__dirname, '../public/placeholder-image.png');

console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:');

if (fs.existsSync(svgPath)) {
  const stats = fs.statSync(svgPath);
  console.log(`‚úÖ placeholder-image.svg —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (${stats.size} –±–∞–π—Ç)`);
  
  const content = fs.readFileSync(svgPath, 'utf8');
  if (content.includes('<svg') && content.includes('–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')) {
    console.log('‚úÖ SVG —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ä–∞–∑–º–µ—Ç–∫—É');
  } else {
    console.log('‚ùå SVG —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ä–∞–∑–º–µ—Ç–∫—É');
  }
} else {
  console.log('‚ùå placeholder-image.svg –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

if (fs.existsSync(pngPath)) {
  console.log('‚ö†Ô∏è  placeholder-image.png –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–¥–∞–ª–µ–Ω)');
} else {
  console.log('‚úÖ placeholder-image.png —É–¥–∞–ª–µ–Ω (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–¥–µ
console.log('\nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–¥–µ:');

const filesToCheck = [
  '../components/ui/OptimizedImage.tsx',
  '../components/ui/ImageUpload.tsx'
];

filesToCheck.forEach(filePath => {
  const fullPath = path.join(__dirname, filePath);
  if (fs.existsSync(fullPath)) {
    const content = fs.readFileSync(fullPath, 'utf8');
    if (content.includes('/placeholder-image.svg')) {
      console.log(`‚úÖ ${path.basename(filePath)} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç SVG placeholder`);
    } else if (content.includes('/placeholder-image.png')) {
      console.log(`‚ùå ${path.basename(filePath)} –≤—Å–µ –µ—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PNG placeholder`);
    } else {
      console.log(`‚ö†Ô∏è  ${path.basename(filePath)} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–æ–∫ –Ω–∞ placeholder`);
    }
  } else {
    console.log(`‚ùå ${path.basename(filePath)} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
  }
});

console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:');
console.log('‚úÖ Placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');
console.log('‚úÖ SVG —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
console.log('‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
